<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.heeexy.example.dao.ProductWarehouseStorageBackMapper">
    <resultMap id="BaseResultMap" type="com.heeexy.example.model.ProductWarehouseStorageBack">
        <id column="backID" jdbcType="INTEGER" property="backid"/>
        <result column="productID" jdbcType="INTEGER" property="productid"/>
        <result column="skuCode" jdbcType="VARCHAR" property="skucode"/>
        <result column="warehouseName" jdbcType="VARCHAR" property="warehousename"/>
        <result column="warehouseID" jdbcType="BIGINT" property="warehouseid"/>
        <result column="onSell" jdbcType="INTEGER" property="onsell"/>
        <result column="onPurchase" jdbcType="INTEGER" property="onpurchase"/>
        <result column="onCnWarehouse" jdbcType="INTEGER" property="oncnwarehouse"/>
        <result column="onWay" jdbcType="INTEGER" property="onway"/>
        <result column="month" jdbcType="INTEGER" property="month"/>
        <result column="day" jdbcType="INTEGER" property="day"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        backID, productID, skuCode, warehouseName, warehouseID, onSell, onPurchase, onCnWarehouse,
        onWay, month, day
    </sql>
    <select id="selectByExample" parameterType="com.heeexy.example.model.ProductWarehouseStorageBackExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from product_warehouse_storage_back
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from product_warehouse_storage_back
        where backID = #{backid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from product_warehouse_storage_back
        where backID = #{backid,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.heeexy.example.model.ProductWarehouseStorageBackExample">
        delete from product_warehouse_storage_back
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.heeexy.example.model.ProductWarehouseStorageBack">
        insert into product_warehouse_storage_back (backID, productID, skuCode,
        warehouseName, warehouseID, onSell,
        onPurchase, onCnWarehouse, onWay,
        month, day)
        values (#{backid,jdbcType=INTEGER}, #{productid,jdbcType=INTEGER}, #{skucode,jdbcType=VARCHAR},
        #{warehousename,jdbcType=VARCHAR}, #{warehouseid,jdbcType=BIGINT}, #{onsell,jdbcType=INTEGER},
        #{onpurchase,jdbcType=INTEGER}, #{oncnwarehouse,jdbcType=INTEGER}, #{onway,jdbcType=INTEGER},
        #{month,jdbcType=INTEGER}, #{day,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.heeexy.example.model.ProductWarehouseStorageBack">
        insert into product_warehouse_storage_back
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="backid != null">
                backID,
            </if>
            <if test="productid != null">
                productID,
            </if>
            <if test="skucode != null">
                skuCode,
            </if>
            <if test="warehousename != null">
                warehouseName,
            </if>
            <if test="warehouseid != null">
                warehouseID,
            </if>
            <if test="onsell != null">
                onSell,
            </if>
            <if test="onpurchase != null">
                onPurchase,
            </if>
            <if test="oncnwarehouse != null">
                onCnWarehouse,
            </if>
            <if test="onway != null">
                onWay,
            </if>
            <if test="month != null">
                month,
            </if>
            <if test="day != null">
                day,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="backid != null">
                #{backid,jdbcType=INTEGER},
            </if>
            <if test="productid != null">
                #{productid,jdbcType=INTEGER},
            </if>
            <if test="skucode != null">
                #{skucode,jdbcType=VARCHAR},
            </if>
            <if test="warehousename != null">
                #{warehousename,jdbcType=VARCHAR},
            </if>
            <if test="warehouseid != null">
                #{warehouseid,jdbcType=BIGINT},
            </if>
            <if test="onsell != null">
                #{onsell,jdbcType=INTEGER},
            </if>
            <if test="onpurchase != null">
                #{onpurchase,jdbcType=INTEGER},
            </if>
            <if test="oncnwarehouse != null">
                #{oncnwarehouse,jdbcType=INTEGER},
            </if>
            <if test="onway != null">
                #{onway,jdbcType=INTEGER},
            </if>
            <if test="month != null">
                #{month,jdbcType=INTEGER},
            </if>
            <if test="day != null">
                #{day,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.heeexy.example.model.ProductWarehouseStorageBackExample"
            resultType="java.lang.Integer">
        select count(*) from product_warehouse_storage_back
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update product_warehouse_storage_back
        <set>
            <if test="record.backid != null">
                backID = #{record.backid,jdbcType=INTEGER},
            </if>
            <if test="record.productid != null">
                productID = #{record.productid,jdbcType=INTEGER},
            </if>
            <if test="record.skucode != null">
                skuCode = #{record.skucode,jdbcType=VARCHAR},
            </if>
            <if test="record.warehousename != null">
                warehouseName = #{record.warehousename,jdbcType=VARCHAR},
            </if>
            <if test="record.warehouseid != null">
                warehouseID = #{record.warehouseid,jdbcType=BIGINT},
            </if>
            <if test="record.onsell != null">
                onSell = #{record.onsell,jdbcType=INTEGER},
            </if>
            <if test="record.onpurchase != null">
                onPurchase = #{record.onpurchase,jdbcType=INTEGER},
            </if>
            <if test="record.oncnwarehouse != null">
                onCnWarehouse = #{record.oncnwarehouse,jdbcType=INTEGER},
            </if>
            <if test="record.onway != null">
                onWay = #{record.onway,jdbcType=INTEGER},
            </if>
            <if test="record.month != null">
                month = #{record.month,jdbcType=INTEGER},
            </if>
            <if test="record.day != null">
                day = #{record.day,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update product_warehouse_storage_back
        set backID = #{record.backid,jdbcType=INTEGER},
        productID = #{record.productid,jdbcType=INTEGER},
        skuCode = #{record.skucode,jdbcType=VARCHAR},
        warehouseName = #{record.warehousename,jdbcType=VARCHAR},
        warehouseID = #{record.warehouseid,jdbcType=BIGINT},
        onSell = #{record.onsell,jdbcType=INTEGER},
        onPurchase = #{record.onpurchase,jdbcType=INTEGER},
        onCnWarehouse = #{record.oncnwarehouse,jdbcType=INTEGER},
        onWay = #{record.onway,jdbcType=INTEGER},
        month = #{record.month,jdbcType=INTEGER},
        day = #{record.day,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.heeexy.example.model.ProductWarehouseStorageBack">
        update product_warehouse_storage_back
        <set>
            <if test="productid != null">
                productID = #{productid,jdbcType=INTEGER},
            </if>
            <if test="skucode != null">
                skuCode = #{skucode,jdbcType=VARCHAR},
            </if>
            <if test="warehousename != null">
                warehouseName = #{warehousename,jdbcType=VARCHAR},
            </if>
            <if test="warehouseid != null">
                warehouseID = #{warehouseid,jdbcType=BIGINT},
            </if>
            <if test="onsell != null">
                onSell = #{onsell,jdbcType=INTEGER},
            </if>
            <if test="onpurchase != null">
                onPurchase = #{onpurchase,jdbcType=INTEGER},
            </if>
            <if test="oncnwarehouse != null">
                onCnWarehouse = #{oncnwarehouse,jdbcType=INTEGER},
            </if>
            <if test="onway != null">
                onWay = #{onway,jdbcType=INTEGER},
            </if>
            <if test="month != null">
                month = #{month,jdbcType=INTEGER},
            </if>
            <if test="day != null">
                day = #{day,jdbcType=INTEGER},
            </if>
        </set>
        where backID = #{backid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.heeexy.example.model.ProductWarehouseStorageBack">
        update product_warehouse_storage_back
        set productID = #{productid,jdbcType=INTEGER},
        skuCode = #{skucode,jdbcType=VARCHAR},
        warehouseName = #{warehousename,jdbcType=VARCHAR},
        warehouseID = #{warehouseid,jdbcType=BIGINT},
        onSell = #{onsell,jdbcType=INTEGER},
        onPurchase = #{onpurchase,jdbcType=INTEGER},
        onCnWarehouse = #{oncnwarehouse,jdbcType=INTEGER},
        onWay = #{onway,jdbcType=INTEGER},
        month = #{month,jdbcType=INTEGER},
        day = #{day,jdbcType=INTEGER}
        where backID = #{backid,jdbcType=INTEGER}
    </update>
</mapper>