<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.heeexy.example.dao.AlloOutSkuMapper">
    <resultMap id="BaseResultMap" type="com.heeexy.example.model.AlloOutSku">
        <id column="alloSkuID" jdbcType="INTEGER" property="alloskuid"/>
        <result column="alloID" jdbcType="INTEGER" property="alloid"/>
        <result column="alloNum" jdbcType="VARCHAR" property="allonum"/>
        <result column="typeCount" jdbcType="INTEGER" property="typecount"/>
        <result column="inCount" jdbcType="INTEGER" property="incount"/>
        <result column="productID" jdbcType="INTEGER" property="productid"/>
        <result column="skuCode" jdbcType="VARCHAR" property="skucode"/>
        <result column="useCount" jdbcType="INTEGER" property="usecount"/>
        <result column="price" jdbcType="DECIMAL" property="price"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        alloSkuID, alloID, alloNum, typeCount, inCount, productID, skuCode, useCount, price
    </sql>
    <select id="selectByExample" parameterType="com.heeexy.example.model.AlloOutSkuExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from allo_out_sku
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from allo_out_sku
        where alloSkuID = #{alloskuid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from allo_out_sku
        where alloSkuID = #{alloskuid,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.heeexy.example.model.AlloOutSkuExample">
        delete from allo_out_sku
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.heeexy.example.model.AlloOutSku">
        insert into allo_out_sku (alloSkuID, alloID, alloNum,
        typeCount, inCount, productID,
        skuCode, useCount, price
        )
        values (#{alloskuid,jdbcType=INTEGER}, #{alloid,jdbcType=INTEGER}, #{allonum,jdbcType=VARCHAR},
        #{typecount,jdbcType=INTEGER}, #{incount,jdbcType=INTEGER}, #{productid,jdbcType=INTEGER},
        #{skucode,jdbcType=VARCHAR}, #{usecount,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.heeexy.example.model.AlloOutSku">
        insert into allo_out_sku
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="alloskuid != null">
                alloSkuID,
            </if>
            <if test="alloid != null">
                alloID,
            </if>
            <if test="allonum != null">
                alloNum,
            </if>
            <if test="typecount != null">
                typeCount,
            </if>
            <if test="incount != null">
                inCount,
            </if>
            <if test="productid != null">
                productID,
            </if>
            <if test="skucode != null">
                skuCode,
            </if>
            <if test="usecount != null">
                useCount,
            </if>
            <if test="price != null">
                price,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="alloskuid != null">
                #{alloskuid,jdbcType=INTEGER},
            </if>
            <if test="alloid != null">
                #{alloid,jdbcType=INTEGER},
            </if>
            <if test="allonum != null">
                #{allonum,jdbcType=VARCHAR},
            </if>
            <if test="typecount != null">
                #{typecount,jdbcType=INTEGER},
            </if>
            <if test="incount != null">
                #{incount,jdbcType=INTEGER},
            </if>
            <if test="productid != null">
                #{productid,jdbcType=INTEGER},
            </if>
            <if test="skucode != null">
                #{skucode,jdbcType=VARCHAR},
            </if>
            <if test="usecount != null">
                #{usecount,jdbcType=INTEGER},
            </if>
            <if test="price != null">
                #{price,jdbcType=DECIMAL},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.heeexy.example.model.AlloOutSkuExample"
            resultType="java.lang.Integer">
        select count(*) from allo_out_sku
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update allo_out_sku
        <set>
            <if test="record.alloskuid != null">
                alloSkuID = #{record.alloskuid,jdbcType=INTEGER},
            </if>
            <if test="record.alloid != null">
                alloID = #{record.alloid,jdbcType=INTEGER},
            </if>
            <if test="record.allonum != null">
                alloNum = #{record.allonum,jdbcType=VARCHAR},
            </if>
            <if test="record.typecount != null">
                typeCount = #{record.typecount,jdbcType=INTEGER},
            </if>
            <if test="record.incount != null">
                inCount = #{record.incount,jdbcType=INTEGER},
            </if>
            <if test="record.productid != null">
                productID = #{record.productid,jdbcType=INTEGER},
            </if>
            <if test="record.skucode != null">
                skuCode = #{record.skucode,jdbcType=VARCHAR},
            </if>
            <if test="record.usecount != null">
                useCount = #{record.usecount,jdbcType=INTEGER},
            </if>
            <if test="record.price != null">
                price = #{record.price,jdbcType=DECIMAL},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update allo_out_sku
        set alloSkuID = #{record.alloskuid,jdbcType=INTEGER},
        alloID = #{record.alloid,jdbcType=INTEGER},
        alloNum = #{record.allonum,jdbcType=VARCHAR},
        typeCount = #{record.typecount,jdbcType=INTEGER},
        inCount = #{record.incount,jdbcType=INTEGER},
        productID = #{record.productid,jdbcType=INTEGER},
        skuCode = #{record.skucode,jdbcType=VARCHAR},
        useCount = #{record.usecount,jdbcType=INTEGER},
        price = #{record.price,jdbcType=DECIMAL}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.heeexy.example.model.AlloOutSku">
        update allo_out_sku
        <set>
            <if test="alloid != null">
                alloID = #{alloid,jdbcType=INTEGER},
            </if>
            <if test="allonum != null">
                alloNum = #{allonum,jdbcType=VARCHAR},
            </if>
            <if test="typecount != null">
                typeCount = #{typecount,jdbcType=INTEGER},
            </if>
            <if test="incount != null">
                inCount = #{incount,jdbcType=INTEGER},
            </if>
            <if test="productid != null">
                productID = #{productid,jdbcType=INTEGER},
            </if>
            <if test="skucode != null">
                skuCode = #{skucode,jdbcType=VARCHAR},
            </if>
            <if test="usecount != null">
                useCount = #{usecount,jdbcType=INTEGER},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
        </set>
        where alloSkuID = #{alloskuid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.heeexy.example.model.AlloOutSku">
        update allo_out_sku
        set alloID = #{alloid,jdbcType=INTEGER},
        alloNum = #{allonum,jdbcType=VARCHAR},
        typeCount = #{typecount,jdbcType=INTEGER},
        inCount = #{incount,jdbcType=INTEGER},
        productID = #{productid,jdbcType=INTEGER},
        skuCode = #{skucode,jdbcType=VARCHAR},
        useCount = #{usecount,jdbcType=INTEGER},
        price = #{price,jdbcType=DECIMAL}
        where alloSkuID = #{alloskuid,jdbcType=INTEGER}
    </update>
</mapper>