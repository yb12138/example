<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.heeexy.example.dao.WarehouseInWarrantMapper">
    <resultMap id="BaseResultMap" type="com.heeexy.example.model.WarehouseInWarrant">
        <id column="inID" jdbcType="INTEGER" property="inid"/>
        <result column="inNum" jdbcType="VARCHAR" property="innum"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="userID" jdbcType="INTEGER" property="userid"/>
        <result column="createTime" jdbcType="TIMESTAMP" property="createtime"/>
        <result column="purchaseID" jdbcType="INTEGER" property="purchaseid"/>
        <result column="purchaseNum" jdbcType="VARCHAR" property="purchasenum"/>
        <result column="warehouseID" jdbcType="INTEGER" property="warehouseid"/>
        <result column="warehouseName" jdbcType="VARCHAR" property="warehousename"/>
        <result column="userName" jdbcType="VARCHAR" property="username"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="headwayType" jdbcType="VARCHAR" property="headwaytype"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        inID, inNum, type, status, userID, createTime, purchaseID, purchaseNum, warehouseID,
        warehouseName, userName, remark, headwayType
    </sql>
    <select id="selectByExample" parameterType="com.heeexy.example.model.WarehouseInWarrantExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from warehouse_in_warrant
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from warehouse_in_warrant
        where inID = #{inid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from warehouse_in_warrant
        where inID = #{inid,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.heeexy.example.model.WarehouseInWarrantExample">
        delete from warehouse_in_warrant
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.heeexy.example.model.WarehouseInWarrant">
        insert into warehouse_in_warrant (inID, inNum, type,
        status, userID, createTime,
        purchaseID, purchaseNum, warehouseID,
        warehouseName, userName, remark,
        headwayType)
        values (#{inid,jdbcType=INTEGER}, #{innum,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR},
        #{status,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP},
        #{purchaseid,jdbcType=INTEGER}, #{purchasenum,jdbcType=VARCHAR}, #{warehouseid,jdbcType=INTEGER},
        #{warehousename,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR},
        #{headwaytype,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" keyProperty="inid" useGeneratedKeys="true"
            parameterType="com.heeexy.example.model.WarehouseInWarrant">
        insert into warehouse_in_warrant
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="inid != null">
                inID,
            </if>
            <if test="innum != null">
                inNum,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="userid != null">
                userID,
            </if>
            <if test="createtime != null">
                createTime,
            </if>
            <if test="purchaseid != null">
                purchaseID,
            </if>
            <if test="purchasenum != null">
                purchaseNum,
            </if>
            <if test="warehouseid != null">
                warehouseID,
            </if>
            <if test="warehousename != null">
                warehouseName,
            </if>
            <if test="username != null">
                userName,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="headwaytype != null">
                headwayType,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="inid != null">
                #{inid,jdbcType=INTEGER},
            </if>
            <if test="innum != null">
                #{innum,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="userid != null">
                #{userid,jdbcType=INTEGER},
            </if>
            <if test="createtime != null">
                #{createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="purchaseid != null">
                #{purchaseid,jdbcType=INTEGER},
            </if>
            <if test="purchasenum != null">
                #{purchasenum,jdbcType=VARCHAR},
            </if>
            <if test="warehouseid != null">
                #{warehouseid,jdbcType=INTEGER},
            </if>
            <if test="warehousename != null">
                #{warehousename,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="headwaytype != null">
                #{headwaytype,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.heeexy.example.model.WarehouseInWarrantExample"
            resultType="java.lang.Integer">
        select count(*) from warehouse_in_warrant
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update warehouse_in_warrant
        <set>
            <if test="record.inid != null">
                inID = #{record.inid,jdbcType=INTEGER},
            </if>
            <if test="record.innum != null">
                inNum = #{record.innum,jdbcType=VARCHAR},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.userid != null">
                userID = #{record.userid,jdbcType=INTEGER},
            </if>
            <if test="record.createtime != null">
                createTime = #{record.createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.purchaseid != null">
                purchaseID = #{record.purchaseid,jdbcType=INTEGER},
            </if>
            <if test="record.purchasenum != null">
                purchaseNum = #{record.purchasenum,jdbcType=VARCHAR},
            </if>
            <if test="record.warehouseid != null">
                warehouseID = #{record.warehouseid,jdbcType=INTEGER},
            </if>
            <if test="record.warehousename != null">
                warehouseName = #{record.warehousename,jdbcType=VARCHAR},
            </if>
            <if test="record.username != null">
                userName = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
            <if test="record.headwaytype != null">
                headwayType = #{record.headwaytype,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update warehouse_in_warrant
        set inID = #{record.inid,jdbcType=INTEGER},
        inNum = #{record.innum,jdbcType=VARCHAR},
        type = #{record.type,jdbcType=VARCHAR},
        status = #{record.status,jdbcType=INTEGER},
        userID = #{record.userid,jdbcType=INTEGER},
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
        purchaseID = #{record.purchaseid,jdbcType=INTEGER},
        purchaseNum = #{record.purchasenum,jdbcType=VARCHAR},
        warehouseID = #{record.warehouseid,jdbcType=INTEGER},
        warehouseName = #{record.warehousename,jdbcType=VARCHAR},
        userName = #{record.username,jdbcType=VARCHAR},
        remark = #{record.remark,jdbcType=VARCHAR},
        headwayType = #{record.headwaytype,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.heeexy.example.model.WarehouseInWarrant">
        update warehouse_in_warrant
        <set>
            <if test="innum != null">
                inNum = #{innum,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="userid != null">
                userID = #{userid,jdbcType=INTEGER},
            </if>
            <if test="createtime != null">
                createTime = #{createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="purchaseid != null">
                purchaseID = #{purchaseid,jdbcType=INTEGER},
            </if>
            <if test="purchasenum != null">
                purchaseNum = #{purchasenum,jdbcType=VARCHAR},
            </if>
            <if test="warehouseid != null">
                warehouseID = #{warehouseid,jdbcType=INTEGER},
            </if>
            <if test="warehousename != null">
                warehouseName = #{warehousename,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                userName = #{username,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="headwaytype != null">
                headwayType = #{headwaytype,jdbcType=VARCHAR},
            </if>
        </set>
        where inID = #{inid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.heeexy.example.model.WarehouseInWarrant">
        update warehouse_in_warrant
        set inNum = #{innum,jdbcType=VARCHAR},
        type = #{type,jdbcType=VARCHAR},
        status = #{status,jdbcType=INTEGER},
        userID = #{userid,jdbcType=INTEGER},
        createTime = #{createtime,jdbcType=TIMESTAMP},
        purchaseID = #{purchaseid,jdbcType=INTEGER},
        purchaseNum = #{purchasenum,jdbcType=VARCHAR},
        warehouseID = #{warehouseid,jdbcType=INTEGER},
        warehouseName = #{warehousename,jdbcType=VARCHAR},
        userName = #{username,jdbcType=VARCHAR},
        remark = #{remark,jdbcType=VARCHAR},
        headwayType = #{headwaytype,jdbcType=VARCHAR}
        where inID = #{inid,jdbcType=INTEGER}
    </update>
</mapper>