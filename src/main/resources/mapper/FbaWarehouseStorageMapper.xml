<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.heeexy.example.dao.FbaWarehouseStorageMapper">
    <resultMap id="BaseResultMap" type="com.heeexy.example.model.FbaWarehouseStorage">
        <id column="productID" property="productid" jdbcType="INTEGER"/>
        <result column="warehouseID" property="warehouseid" jdbcType="BIGINT"/>
        <result column="actualQuantity" property="actualquantity" jdbcType="INTEGER"/>
        <result column="sku" property="sku" jdbcType="VARCHAR"/>
        <result column="availableQuantity" property="availablequantity" jdbcType="INTEGER"/>
        <result column="transitQuantity" property="transitquantity" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        productID, warehouseID, actualQuantity, sku, availableQuantity, transitQuantity
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.heeexy.example.model.FbaWarehouseStorageExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from fba_warehouse_storage
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from fba_warehouse_storage
        where productID = #{productid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from fba_warehouse_storage
        where productID = #{productid,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.heeexy.example.model.FbaWarehouseStorageExample">
        delete from fba_warehouse_storage
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.heeexy.example.model.FbaWarehouseStorage">
        insert into fba_warehouse_storage (productID, warehouseID, actualQuantity,
        sku, availableQuantity, transitQuantity
        )
        values (#{productid,jdbcType=INTEGER}, #{warehouseid,jdbcType=BIGINT}, #{actualquantity,jdbcType=INTEGER},
        #{sku,jdbcType=VARCHAR}, #{availablequantity,jdbcType=INTEGER}, #{transitquantity,jdbcType=INTEGER}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.heeexy.example.model.FbaWarehouseStorage">
        insert into fba_warehouse_storage
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="productid != null">
                productID,
            </if>
            <if test="warehouseid != null">
                warehouseID,
            </if>
            <if test="actualquantity != null">
                actualQuantity,
            </if>
            <if test="sku != null">
                sku,
            </if>
            <if test="availablequantity != null">
                availableQuantity,
            </if>
            <if test="transitquantity != null">
                transitQuantity,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="productid != null">
                #{productid,jdbcType=INTEGER},
            </if>
            <if test="warehouseid != null">
                #{warehouseid,jdbcType=BIGINT},
            </if>
            <if test="actualquantity != null">
                #{actualquantity,jdbcType=INTEGER},
            </if>
            <if test="sku != null">
                #{sku,jdbcType=VARCHAR},
            </if>
            <if test="availablequantity != null">
                #{availablequantity,jdbcType=INTEGER},
            </if>
            <if test="transitquantity != null">
                #{transitquantity,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.heeexy.example.model.FbaWarehouseStorageExample"
            resultType="java.lang.Integer">
        select count(*) from fba_warehouse_storage
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update fba_warehouse_storage
        <set>
            <if test="record.productid != null">
                productID = #{record.productid,jdbcType=INTEGER},
            </if>
            <if test="record.warehouseid != null">
                warehouseID = #{record.warehouseid,jdbcType=BIGINT},
            </if>
            <if test="record.actualquantity != null">
                actualQuantity = #{record.actualquantity,jdbcType=INTEGER},
            </if>
            <if test="record.sku != null">
                sku = #{record.sku,jdbcType=VARCHAR},
            </if>
            <if test="record.availablequantity != null">
                availableQuantity = #{record.availablequantity,jdbcType=INTEGER},
            </if>
            <if test="record.transitquantity != null">
                transitQuantity = #{record.transitquantity,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update fba_warehouse_storage
        set productID = #{record.productid,jdbcType=INTEGER},
        warehouseID = #{record.warehouseid,jdbcType=BIGINT},
        actualQuantity = #{record.actualquantity,jdbcType=INTEGER},
        sku = #{record.sku,jdbcType=VARCHAR},
        availableQuantity = #{record.availablequantity,jdbcType=INTEGER},
        transitQuantity = #{record.transitquantity,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.heeexy.example.model.FbaWarehouseStorage">
        update fba_warehouse_storage
        <set>
            <if test="warehouseid != null">
                warehouseID = #{warehouseid,jdbcType=BIGINT},
            </if>
            <if test="actualquantity != null">
                actualQuantity = #{actualquantity,jdbcType=INTEGER},
            </if>
            <if test="sku != null">
                sku = #{sku,jdbcType=VARCHAR},
            </if>
            <if test="availablequantity != null">
                availableQuantity = #{availablequantity,jdbcType=INTEGER},
            </if>
            <if test="transitquantity != null">
                transitQuantity = #{transitquantity,jdbcType=INTEGER},
            </if>
        </set>
        where productID = #{productid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.heeexy.example.model.FbaWarehouseStorage">
        update fba_warehouse_storage
        set warehouseID = #{warehouseid,jdbcType=BIGINT},
        actualQuantity = #{actualquantity,jdbcType=INTEGER},
        sku = #{sku,jdbcType=VARCHAR},
        availableQuantity = #{availablequantity,jdbcType=INTEGER},
        transitQuantity = #{transitquantity,jdbcType=INTEGER}
        where productID = #{productid,jdbcType=INTEGER}
    </update>
</mapper>