<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.heeexy.example.dao.ProductSupplierMapper">
    <resultMap id="BaseResultMap" type="com.heeexy.example.model.ProductSupplier">
        <id column="productID" property="productid" jdbcType="INTEGER"/>
        <result column="supplierlink1" property="supplierlink1" jdbcType="VARCHAR"/>
        <result column="supplierlink2" property="supplierlink2" jdbcType="VARCHAR"/>
        <result column="supplierlink3" property="supplierlink3" jdbcType="VARCHAR"/>
        <result column="deliverytime" property="deliverytime" jdbcType="INTEGER"/>
        <result column="registerlink" property="registerlink" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        productID, supplierlink1, supplierlink2, supplierlink3, deliverytime, registerlink
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.heeexy.example.model.ProductSupplierExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from product_supplier
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from product_supplier
        where productID = #{productid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from product_supplier
        where productID = #{productid,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.heeexy.example.model.ProductSupplierExample">
        delete from product_supplier
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.heeexy.example.model.ProductSupplier">
        insert into product_supplier (productID, supplierlink1, supplierlink2,
        supplierlink3, deliverytime, registerlink
        )
        values (#{productid,jdbcType=INTEGER}, #{supplierlink1,jdbcType=VARCHAR}, #{supplierlink2,jdbcType=VARCHAR},
        #{supplierlink3,jdbcType=VARCHAR}, #{deliverytime,jdbcType=INTEGER}, #{registerlink,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.heeexy.example.model.ProductSupplier">
        insert into product_supplier
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="productid != null">
                productID,
            </if>
            <if test="supplierlink1 != null">
                supplierlink1,
            </if>
            <if test="supplierlink2 != null">
                supplierlink2,
            </if>
            <if test="supplierlink3 != null">
                supplierlink3,
            </if>
            <if test="deliverytime != null">
                deliverytime,
            </if>
            <if test="registerlink != null">
                registerlink,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="productid != null">
                #{productid,jdbcType=INTEGER},
            </if>
            <if test="supplierlink1 != null">
                #{supplierlink1,jdbcType=VARCHAR},
            </if>
            <if test="supplierlink2 != null">
                #{supplierlink2,jdbcType=VARCHAR},
            </if>
            <if test="supplierlink3 != null">
                #{supplierlink3,jdbcType=VARCHAR},
            </if>
            <if test="deliverytime != null">
                #{deliverytime,jdbcType=INTEGER},
            </if>
            <if test="registerlink != null">
                #{registerlink,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.heeexy.example.model.ProductSupplierExample"
            resultType="java.lang.Integer">
        select count(*) from product_supplier
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update product_supplier
        <set>
            <if test="record.productid != null">
                productID = #{record.productid,jdbcType=INTEGER},
            </if>
            <if test="record.supplierlink1 != null">
                supplierlink1 = #{record.supplierlink1,jdbcType=VARCHAR},
            </if>
            <if test="record.supplierlink2 != null">
                supplierlink2 = #{record.supplierlink2,jdbcType=VARCHAR},
            </if>
            <if test="record.supplierlink3 != null">
                supplierlink3 = #{record.supplierlink3,jdbcType=VARCHAR},
            </if>
            <if test="record.deliverytime != null">
                deliverytime = #{record.deliverytime,jdbcType=INTEGER},
            </if>
            <if test="record.registerlink != null">
                registerlink = #{record.registerlink,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update product_supplier
        set productID = #{record.productid,jdbcType=INTEGER},
        supplierlink1 = #{record.supplierlink1,jdbcType=VARCHAR},
        supplierlink2 = #{record.supplierlink2,jdbcType=VARCHAR},
        supplierlink3 = #{record.supplierlink3,jdbcType=VARCHAR},
        deliverytime = #{record.deliverytime,jdbcType=INTEGER},
        registerlink = #{record.registerlink,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.heeexy.example.model.ProductSupplier">
        update product_supplier
        <set>
            <if test="supplierlink1 != null">
                supplierlink1 = #{supplierlink1,jdbcType=VARCHAR},
            </if>
            <if test="supplierlink2 != null">
                supplierlink2 = #{supplierlink2,jdbcType=VARCHAR},
            </if>
            <if test="supplierlink3 != null">
                supplierlink3 = #{supplierlink3,jdbcType=VARCHAR},
            </if>
            <if test="deliverytime != null">
                deliverytime = #{deliverytime,jdbcType=INTEGER},
            </if>
            <if test="registerlink != null">
                registerlink = #{registerlink,jdbcType=VARCHAR},
            </if>
        </set>
        where productID = #{productid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.heeexy.example.model.ProductSupplier">
        update product_supplier
        set supplierlink1 = #{supplierlink1,jdbcType=VARCHAR},
        supplierlink2 = #{supplierlink2,jdbcType=VARCHAR},
        supplierlink3 = #{supplierlink3,jdbcType=VARCHAR},
        deliverytime = #{deliverytime,jdbcType=INTEGER},
        registerlink = #{registerlink,jdbcType=VARCHAR}
        where productID = #{productid,jdbcType=INTEGER}
    </update>
</mapper>